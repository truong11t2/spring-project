---
# Source: dev-env/charts/main/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: main
  labels:
    app.kubernetes.io/name: main
    helm.sh/chart: main-1.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/name: main
---
# Source: dev-env/charts/mongodb/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-1.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 27017
  selector:
    app.kubernetes.io/name: mongodb
---
# Source: dev-env/charts/mysql/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-1.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 3306
  selector:
    app.kubernetes.io/name: mysql
---
# Source: dev-env/charts/todo/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: todo
  labels:
    app.kubernetes.io/name: todo
    helm.sh/chart: todo-1.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/name: todo
---
# Source: dev-env/charts/user/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: user
  labels:
    app.kubernetes.io/name: user
    helm.sh/chart: user-1.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/name: user
---
# Source: dev-env/charts/main/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: main
  labels:
    app.kubernetes.io/name: main
    helm.sh/chart: main-1.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: main
  template:
    metadata:
      labels:
        app.kubernetes.io/name: main
    spec:
      containers:
        - name: main
          image: "hands-on/main-service:latest"
          imagePullPolicy: IfNotPresent
          env:
          - name: SPRING_PROFILES_ACTIVE
            value: docker
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          resources:
            limits:
              memory: 350Mi
---
# Source: dev-env/charts/mongodb/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  labels:
    app.kubernetes.io/name: mongodb
    helm.sh/chart: mongodb-1.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
    spec:
      containers:
        - name: mongodb
          image: "registry.hub.docker.com/library/mongo:4.4.2"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          resources:
            limits:
              memory: 350Mi
---
# Source: dev-env/charts/mysql/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-1.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql
    spec:
      containers:
        - name: mysql
          image: "registry.hub.docker.com/library/mysql:5.7.32"
          imagePullPolicy: IfNotPresent
          args:
            - --ignore-db-dir=lost+found
          env:
          - name: MYSQL_DATABASE
            value: user
          - name: MYSQL_PASSWORD
            value: pwd
          - name: MYSQL_ROOT_PASSWORD
            value: rootpwd
          - name: MYSQL_USER
            value: user
          ports:
            - containerPort: 3306
          resources:
            limits:
              memory: 350Mi
---
# Source: dev-env/charts/todo/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo
  labels:
    app.kubernetes.io/name: todo
    helm.sh/chart: todo-1.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: todo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: todo
    spec:
      containers:
        - name: todo
          image: "hands-on/todo-service:latest"
          imagePullPolicy: IfNotPresent
          env:
          - name: SPRING_PROFILES_ACTIVE
            value: docker
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          resources:
            limits:
              memory: 350Mi
---
# Source: dev-env/charts/user/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user
  labels:
    app.kubernetes.io/name: user
    helm.sh/chart: user-1.0.0
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: user
  template:
    metadata:
      labels:
        app.kubernetes.io/name: user
    spec:
      containers:
        - name: user
          image: "hands-on/user-service:latest"
          imagePullPolicy: IfNotPresent
          env:
          - name: SPRING_PROFILES_ACTIVE
            value: docker
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          resources:
            limits:
              memory: 350Mi
---
# Source: dev-env/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: RELEASE-NAME-dev-env
  labels:
    app.kubernetes.io/name: dev-env
    helm.sh/chart: dev-env-1.0.0
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/issuer: selfsigned
spec:
  #tls:
    #- hosts:
        #- "minikube.me"
      #secretName: tls-certificate
  rules:
    - host: "minikube.me"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: main
                port:
                  name: http
